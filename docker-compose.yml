version: "3"
services:
  backend:
    depends_on:
      - pg
    container_name: "backend"
    build: ./backend/
    ports:
      - "3001:3001"
    # volumes:
    #   - ./backend:/app
    #   - /app/node_modules
    networks:
      - network
    restart: on-failure

  frontend:
    depends_on:
      - pg
      - backend
    container_name: "frontend"
    build: ./frontend/
    ports:
      - "3000:3000"
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    networks:
      - network
    restart: on-failure
    
    
  pg:
    # image: postgres:14.1-alpine
    container_name: "postgres"
    build: ./database/
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "5432:5432"

    # volumes:
      # - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql
      #- ./pg/db_data:/var/lib/postgresql/data
    networks:
      - network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - network

networks:
  network:
